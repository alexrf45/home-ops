---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wallabag
  namespace: wallabag
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wallabag
  template:
    metadata:
      labels:
        app: wallabag
        node: worker
      annotations:
        operator.1password.io/inject: "wallabag-web"
    spec:
      containers:
      - name: wallabag-web
        image: wallabag/wallabag:2.6.10
        resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
        ports:
          - containerPort: 80
        env:
        - name: SYMFONY__ENV__DATABASE_USER
          value: "op://HomeLab/wallabag_prod/username"
        - name: SYMFONY__ENV__DATABASE_PASSWORD
          value: "op://HomeLab/wallabag_prod/password"
        - name: SYMFONY__ENV__DATABASE_NAME
          value: "op://HomeLab/wallabag_prod/database"
        - name: SYMFONY__ENV__DATABASE_PORT
          value: "op://HomeLab/wallabag_prod/port"
        - name: SYMFONY__ENV__DATABASE_HOST
          value: "op://HomeLab/wallabag_prod/server"
        - name: SYMFONY__ENV__DATABASE_DRIVER
          value: "pdo_pgsql"
        - name: SYMFONY__ENV__FOSUSER_REGISTRATION
          value: "false"
        - name: POPULATE_DATABASE
          value: "true"
        - name: PHP_MEMORY_LIMIT
          value: 500M
        - name: SYMFONY__ENV__DOMAIN_NAME
          value: "http://url:443"

---
apiVersion: v1
kind: Service
metadata:
  name: wallabag
  namespace: wallabag
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
  selector:
    app: wallabag
    node: worker
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wallabag
  namespace: wallabag
  labels:
    app.kubernetes.io/name: wallabag
  annotations:
    gethomepage.dev/description: Dynamically Detected Homepage
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Apps
    gethomepage.dev/icon: wallabag.png
    gethomepage.dev/name: wallabag
    #    cert-manager.io/cluster-issuer: letsencrypt-staging
    tailscale.com/funnel: "true"
spec:
  ingressClassName: tailscale
  rules:
  - host: prod-wallabag
    http:
      paths:
      - backend:
          service:
            name: wallabag
            port:
              number: 80
        path: /
        pathType: Prefix 
  tls:
  - hosts:
    - prod-wallabag
    secretName: prod-wallabag-tls
