apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: argo-cd
  namespace: flux-system
spec:
  chart:
    spec:
      chart: argo-cd
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: argo
        namespace: flux-system
      version: 7.6.8
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  interval: 30m
  releaseName: argo-cd
  targetNamespace: argo-cd
  values:
    applicationSet:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      name: applicationset-controller
      replicas: 1
    configs:
      cm:
        admin.enabled: true
        application.instanceLabelKey: argocd.argoproj.io/instance
        create: true
        resource.exclusions: |
          - apiGroups:
            - snapshot.storage.k8s.io
            kinds:
            - VolumeSnapshot
            - VolumeSnapshotContent
            clusters:
            - "*"
        statusbadge.enabled: true
      params:
        annotations: {}
        applicationsetcontroller.enable.progressive.syncs: true
        applicationsetcontroller.policy: sync
        create: true
        reposerver.parallelism.limit: 0
        server.basehref: /
        server.disable.auth: false
        server.enable.gzip: true
        server.insecure: true
        server.rootpath: ""
        server.staticassets: /shared/app
        server.x.frame.options: sameorigin
      rbac:
        create: true
      secret:
        argocdServerAdminPassword: $2a$10$/n3UudnhJFwINWzql4NtZ.c6eIAgLjzwy3ui56KzgXOWVf2hgpuv.
        createSecret: true
      ssh:
        knownHosts: |
          [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
          [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
          [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
          bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
          bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
          bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=
          github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
          github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
          github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
          gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
          gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
          gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
          ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
          vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    controller:
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      dynamicClusterDistribution: true
      heartbeatTime: 10
      metrics:
        enabled: true
        rules:
          enabled: false
          namespace: monitoring
        serviceMonitor:
          enabled: true
          interval: 15s
      name: app-controller
      replicas: 2
      revisionHistoryLimit: 10
      serviceAccount:
        automountServiceAccountToken: true
        create: true
        name: argocd-application-controller
    crds:
      install: true
      keep: true
    createClusterRoles: true
    dex:
      enabled: true
      image:
        imagePullPolicy: ""
        repository: ghcr.io/dexidp/dex
        tag: v2.38.0
      name: dex-server
    global:
      additionalLabels:
        app: argo-cd
        env: home
      affinity: null
      domain: internal.argo.fr3d.dev
      logging:
        format: text
        level: error
    nameOverride: argo-cd
    notifications:
      argocdUrl: ""
      cm:
        create: true
      enabled: true
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      name: notifications-controller
      notifiers:
        service.slack: |
          token: $slack-token
      secret:
        create: false
        items: {}
        name: argocd-notifications-secret
    redis:
      enabled: true
      image:
        imagePullPolicy: ""
        repository: public.ecr.aws/docker/library/redis
        tag: 7.2.4-alpine
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: monitoring
      name: redis
      servicePort: 6379
    redis-ha:
      auth: true
      enabled: true
      haproxy:
        enabled: true
        hardAntiAffinity: true
        labels:
          app.kubernetes.io/name: argocd-redis-ha-haproxy
        metrics:
          enabled: true
      hardAntiAffinity: true
      image:
        repository: public.ecr.aws/docker/library/redis
        tag: 7.2.4-alpine
      persistentVolume:
        enabled: false
      redis:
        masterGroupName: argo-cd
    redisSecretInit:
      enabled: true
      name: redis-secret-init
      serviceAccount:
        annotations: {}
        automountServiceAccountToken: true
        create: true
        name: ""
    repoServer:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      name: repo-server
      replicas: 2
      service:
        annotations: {}
        labels: {}
        port: 8081
        portName: tcp-repo-server
      serviceAccount:
        create: true
        name: ""
      useEphemeralHelmWorkingDir: true
    server:
      extensions:
        enabled: true
        image:
          imagePullPolicy: ""
          repository: quay.io/argoprojlabs/argocd-extension-installer
          tag: v0.0.5
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-staging
        controller: generic
        enabled: true
        extraPaths:
        - backend:
            service:
              name: argo-cd-argo-cd-server
              port:
                name: https
          path: /
          pathType: Prefix
        hostname: internal.argo.fr3d.dev
        ingressClassName: cilium
        path: /
        pathType: Prefix
        tls: true
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      name: argo-cd-server
      replicas: 2
      service:
        extensionList:
        - env:
          - name: EXTENSION_URL
            value: https://github.com/argoproj-labs/argocd-extension-metrics/releases/download/v1.0.0/extension.tar.gz
          - name: EXTENSION_CHECKSUM_URL
            value: https://github.com/argoproj-labs/argocd-extension-metrics/releases/download/v1.0.0/extension_checksums.txt
          name: extension-metrics
