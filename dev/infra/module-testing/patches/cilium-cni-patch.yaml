cluster:
  network:
    cni:
      name: none
  proxy:
    disabled: true
  inlineManifests:
    - name: cilium
      contents: |
        ---
        # Source: cilium/templates/cilium-agent/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
          - list
          - delete
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          # This is used when validating policies in preflight. This will need to stay
          # until we figure out how to avoid "get" inside the preflight, and then
          # should be removed ideally.
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          # To synchronize garbage collection of such resources
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        # Source: cilium/templates/cilium-operator/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          # to automatically delete [core|kube]dns pods so that are starting to being
          # managed by Cilium
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          resourceNames:
          - cilium-config
          verbs:
           # allow patching of the configmap to set annotations
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # To remove node taints
          - nodes
          # To set NetworkUnavailable false on startup
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform LB IP allocation for BGP
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          # to check apiserver connectivity
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform the translation of a CNP that contains `ToGroup` to its endpoints
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
          - create
          - update
          - deletecollection
          # To update the status of the CNPs and CCNPs
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          # Update the auto-generated CNPs and CCNPs status.
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          # To perform garbage collection of such resources
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          # To synchronize garbage collection of such resources
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
            # To perform CiliumNode garbage collector
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgppeeringpolicies
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
            - cilium.io
          resources:
            - ciliumpodippools
          verbs:
            - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        # For cilium-operator running in HA mode.
        #
        # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
        # between multiple running instances.
        # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
        # common and fewer objects in the cluster watch "all Leases".
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        # Source: cilium/templates/hubble-ui/clusterrole.yaml
        kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - "*"
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
          - kind: ServiceAccount
            name: "cilium"
            namespace: kube-system
        ---
        # Source: cilium/templates/hubble-relay/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-relay
          namespace: kube-system
          annotations:
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-relay
          ports:
          - protocol: TCP
            port: 80
            targetPort: grpc
        ---
        # Source: cilium/templates/hubble-ui/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-ui
          ports:
            - name: http
              port: 80
              targetPort: 8081
        ---
        # Source: cilium/templates/hubble-relay/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-relay"
          namespace: kube-system
        automountServiceAccountToken: false
        ---
        # Source: cilium/templates/hubble/metrics-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-metrics
          namespace: kube-system
          labels:
            k8s-app: hubble
            app.kubernetes.io/name: hubble
            app.kubernetes.io/part-of: cilium
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9965"
        spec:
          clusterIP: None
          type: ClusterIP
          ports:
          - name: hubble-metrics
            port: 9965
            protocol: TCP
            targetPort: hubble-metrics
          selector:
            k8s-app: cilium
        ---
        # Source: cilium/templates/hubble/peer-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-peer
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: hubble-peer
        spec:
          selector:
            k8s-app: cilium
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          internalTrafficPolicy: Local
        ---
        # Source: cilium/templates/cilium-agent/daemonset.yaml
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: cilium
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-agent
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: cilium
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                appArmorProfile:
                  type: Unconfined
              containers:
              - name: cilium-agent
                image: "quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-agent
                args:
                - --config-dir=/tmp/cilium/config-map
                startupProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  failureThreshold: 105
                  periodSeconds: 2
                  successThreshold: 1
                  initialDelaySeconds: 5
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 10
                  timeoutSeconds: 5
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 3
                  timeoutSeconds: 5
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.memory
                      divisor: '1'
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - "bash"
                      - "-c"
                      - |
                            set -o errexit
                            set -o pipefail
                            set -o nounset
                            
                            # When running in AWS ENI mode, it's likely that 'aws-node' has
                            # had a chance to install SNAT iptables rules. These can result
                            # in dropped traffic, so we should attempt to remove them.
                            # We do it using a 'postStart' hook since this may need to run
                            # for nodes which might have already been init'ed but may still
                            # have dangling rules. This is safe because there are no
                            # dependencies on anything that is part of the startup script
                            # itself, and can be safely run multiple times per node (e.g. in
                            # case of a restart).
                            if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                            then
                                echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                                iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                            fi
                            echo 'Done!'
                            
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                ports:
                - name: peer-service
                  containerPort: 4244
                  hostPort: 4244
                  protocol: TCP
                - name: hubble-metrics
                  containerPort: 9965
                  hostPort: 9965
                  protocol: TCP
                securityContext:
                  privileged: true
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
                # Check for duplicate mounts before mounting
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                - name: cilium-run
                  mountPath: /var/run/cilium
                - name: etc-cni-netd
                  mountPath: /host/etc/cni/net.d
                - name: clustermesh-secrets
                  mountPath: /var/lib/cilium/clustermesh
                  readOnly: true
                  # Needed to be able to load kernel modules
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
                - name: xtables-lock
                  mountPath: /run/xtables.lock
                - name: hubble-tls
                  mountPath: /var/lib/cilium/tls/hubble
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
              initContainers:
              - name: config
                image: "quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                volumeMounts:
                - name: tmp
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              - name: apply-sysctl-overwrites
                image: "quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d"
                imagePullPolicy: IfNotPresent
                env:
                - name: BIN_PATH
                  value: /opt/cni/bin
                command:
                - sh
                - -ec
                # The statically linked Go program binary is invoked to avoid any
                # dependency on utilities like sh that can be missing on certain
                # distros installed on the underlying host. Copy the binary to the
                # same directory where we install cilium cni plugin so that exec permissions
                # are available.
                - |
                  cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
                  nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
                  rm /hostbin/cilium-sysctlfix
                volumeMounts:
                - name: hostproc
                  mountPath: /hostproc
                - name: cni-path
                  mountPath: /hostbin
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  privileged: true
              - name: clean-cilium-state
                image: "quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d"
                imagePullPolicy: IfNotPresent
                command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-state
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-bpf-state
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: write-cni-conf-when-ready
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  privileged: true
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Required to mount cgroup filesystem from the host to cilium agent pod
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                - name: cilium-run
                  mountPath: /var/run/cilium # wait-for-kube-proxy
              # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
              - name: install-cni-binaries
                image: "quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d"
                imagePullPolicy: IfNotPresent
                command:
                  - "/install-plugin.sh"
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  privileged: true
                  capabilities:
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                  - name: cni-path
                    mountPath: /host/opt/cni/bin # .Values.cni.install
              restartPolicy: Always
              priorityClassName: system-node-critical
              serviceAccountName: "cilium"
              automountServiceAccountToken: true
              terminationGracePeriodSeconds: 1
              hostNetwork: true
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # For sharing configuration between the "config" initContainer and the agent
              - name: tmp
                emptyDir: {}
                # To keep state between restarts / upgrades
              - name: cilium-run
                hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                # To keep state between restarts / upgrades for bpf maps
              - name: bpf-maps
                hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
              # To mount cgroup2 filesystem on the host or apply sysctlfix
              - name: hostproc
                hostPath:
                  path: /proc
                  type: Directory
              # To keep state between restarts / upgrades for cgroup2 filesystem
              - name: cilium-cgroup
                hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
              # To install cilium cni plugin in the host
              - name: cni-path
                hostPath:
                  path:  /opt/cni/bin
                  type: DirectoryOrCreate
                # To install cilium cni configuration in the host
              - name: etc-cni-netd
                hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                # To be able to load kernel modules
              - name: lib-modules
                hostPath:
                  path: /lib/modules
                # To access iptables concurrently with other processes (e.g. kube-proxy)
              - name: xtables-lock
                hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                # To read the clustermesh configuration
              - name: clustermesh-secrets
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                      # note: items are not explicitly listed here, since the entries of this secret
                      # depend on the peers configured, and that would cause a restart of all agents
                      # at every addition/removal. Leaving the field empty makes each secret entry
                      # to be automatically projected into the volume as a file whose name is the key.
                  - secret:
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
                  # note: we configure the volume for the kvstoremesh-specific certificate
                  # regardless of whether KVStoreMesh is enabled or not, so that it can be
                  # automatically mounted in case KVStoreMesh gets subsequently enabled,
                  # without requiring an agent restart.
                  - secret:
                      name: clustermesh-apiserver-local-cert
                      optional: true
                      items:
                      - key: tls.key
                        path: local-etcd-client.key
                      - key: tls.crt
                        path: local-etcd-client.crt
                      - key: ca.crt
                        path: local-etcd-client-ca.crt
              - name: hubble-tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-server-certs
                      optional: true
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
        ---
        # Source: cilium/templates/cilium-operator/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cilium-operator
          namespace: kube-system
          labels:
            io.cilium/app: operator
            name: cilium-operator
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-operator
        spec:
          # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
          # for more details.
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
          # of one replica and no user configured Recreate strategy.
          # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
          # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9963"
                prometheus.io/scrape: "true"
              labels:
                io.cilium/app: operator
                name: cilium-operator
                app.kubernetes.io/part-of: cilium
                app.kubernetes.io/name: cilium-operator
            spec:
              containers:
              - name: cilium-operator
                image: "quay.io/cilium/operator-generic:v1.16.5@sha256:f7884848483bbcd7b1e0ccfd34ba4546f258b460cb4b7e2f06a1bcc96ef88039"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-operator-generic
                args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                ports:
                - name: prometheus
                  containerPort: 9963
                  hostPort: 9963
                  protocol: TCP
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 5
                volumeMounts:
                - name: cilium-config-path
                  mountPath: /tmp/cilium/config-map
                  readOnly: true
                terminationMessagePolicy: FallbackToLogsOnError
              hostNetwork: true
              restartPolicy: Always
              priorityClassName: system-cluster-critical
              serviceAccountName: "cilium-operator"
              automountServiceAccountToken: true
              # In HA mode, cilium-operator pods must not be scheduled on the same
              # node as they will clash with each other.
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # To read the configuration from the config map
              - name: cilium-config-path
                configMap:
                  name: cilium-config
        ---
        # Source: cilium/templates/hubble-relay/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
                # ensure pods roll when configmap updates
                cilium.io/hubble-relay-configmap-checksum: "947f14210a1aba945ee020b459a02235d649ee9d6788d06423a39f98d8026af2"
              labels:
                k8s-app: hubble-relay
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                fsGroup: 65532
              containers:
                - name: hubble-relay
                  securityContext:
                    capabilities:
                      drop:
                      - ALL
                    runAsGroup: 65532
                    runAsNonRoot: true
                    runAsUser: 65532
                  image: "quay.io/cilium/hubble-relay:v1.16.5@sha256:6cfae1d1afa566ba941f03d4d7e141feddd05260e5cd0a1509aba1890a45ef00"
                  imagePullPolicy: IfNotPresent
                  command:
                    - hubble-relay
                  args:
                    - serve
                  ports:
                    - name: grpc
                      containerPort: 4245
                  readinessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                  # livenessProbe will kill the pod, we should be very conservative
                  # here on failures since killing the pod should be a last resort, and
                  # we should provide enough time for relay to retry before killing it.
                  livenessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 10
                    # Give relay time to establish connections and make a few retries
                    # before starting livenessProbes.
                    initialDelaySeconds: 10
                    # 10 second * 12 failures = 2 minutes of failure.
                    # If relay cannot become healthy after 2 minutes, then killing it
                    # might resolve whatever issue is occurring.
                    #
                    # 10 seconds is a reasonable retry period so we can see if it's
                    # failing regularly or only sporadically.
                    periodSeconds: 10
                    failureThreshold: 12
                  startupProbe:
                    grpc:
                      port: 4222
                    # Give relay time to get it's certs and establish connections and
                    # make a few retries before starting startupProbes.
                    initialDelaySeconds: 10
                    # 20 * 3 seconds = 1 minute of failure before we consider startup as failed.
                    failureThreshold: 20
                    # Retry more frequently at startup so that it can be considered started more quickly.
                    periodSeconds: 3
                  volumeMounts:
                  - name: config
                    mountPath: /etc/hubble-relay
                    readOnly: true
                  - name: tls
                    mountPath: /var/lib/hubble-relay/tls
                    readOnly: true
                  terminationMessagePolicy: FallbackToLogsOnError
                
              restartPolicy: Always
              priorityClassName: 
              serviceAccountName: "hubble-relay"
              automountServiceAccountToken: false
              terminationGracePeriodSeconds: 1
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - name: config
                configMap:
                  name: hubble-relay-config
                  items:
                  - key: config.yaml
                    path: config.yaml
              - name: tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-relay-client-certs
                      items:
                        - key: tls.crt
                          path: client.crt
                        - key: tls.key
                          path: client.key
                        - key: ca.crt
                          path: hubble-server-ca.crt
        ---
        # Source: cilium/templates/hubble-ui/deployment.yaml
        kind: Deployment
        apiVersion: apps/v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-ui
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                fsGroup: 1001
                runAsGroup: 1001
                runAsUser: 1001
              priorityClassName: 
              serviceAccountName: "hubble-ui"
              automountServiceAccountToken: true
              containers:
              - name: frontend
                image: "quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6"
                imagePullPolicy: IfNotPresent
                ports:
                - name: http
                  containerPort: 8081
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                volumeMounts:
                - name: hubble-ui-nginx-conf
                  mountPath: /etc/nginx/conf.d/default.conf
                  subPath: nginx.conf
                - name: tmp-dir
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              - name: backend
                image: "quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b"
                imagePullPolicy: IfNotPresent
                env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: "hubble-relay:80"
                ports:
                - name: grpc
                  containerPort: 8090
                volumeMounts:
                terminationMessagePolicy: FallbackToLogsOnError
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
        ---
        # Source: cilium/templates/hubble-ui/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-ca-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXMG56MUxISy9FdHdudDJkeUFXT2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURFeE56QXlNemMwTWxvWERUSTRNREV4TnpBeQpNemMwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyRFJkdXZ5WmE4MTg1ajd4YnNCa2Y4Vk1pbkNoV0dGQUdBUW50cTR2NmkzZGxocVkKVE1CTm9CZWxpaDZJeEFNZUdJWnAyQ0tTQy9iNDlYbDFSNjA3QWN6eEFBaXN1WUhqOFk2RmdGRGs5elcxOVpobQpKNnZUUHhjYzlxMkFiNTRzT3hlOWsvdEo2VkVHYUE3ZFlvQnZ6SGt0VDR0bHRxSG1CckxCSVRMamttWmJUTUpmCnIzUGdRcXhSQ0ZQNVVlNDZUQ2crSmlvUFRJWnNWYmRoR0QxU001SG9XbE85VUxMbXVZYTRyZU9UdVc2SHlWMVMKVWoxY3E5Nk5GQm9zUFpJUlg5cENRTXB0VUNMWVJTNVpqa2lxMVFFNVB2dFZRV2JuL2w0elphbFRiZldpbnkyUgpick1OS0crNkxvVWNjN1pNUHZVNWFDYkdKc3BoazBHZ3dtcFZPUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDJINlZiQUhzaFFCVC9nc1dxMW41eVdJd092TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hPdTlaUmZDcmE0RTdHNUpCMXBrd2REYUNOQ2hGbnE1L25kUXZHbm1GYnRIdll1djRVN0hvClJaTXFLNk9qL1lGMzZsRzBuOTUweWhsQ1ZDck5icTJUTDgydHBtdm5teUFMekxRMzliMllkdUZLdGtRV1B3MUUKVi81dUxXdUFLUFQvYkw0ZFZMUVExdCt4YkFZMjJSMUhEdVUwY0xkWFV2V0xyRmVHRnFEcUNlbmhDb2ExSXN1cwozdnNleE9TNnJ2ZWVSMktYSit4TWo3OHVOMzF2Mzhyb1Q5WWJxNUVkZEtjL1FHUXBCQ0J2SjlRK0NMRjYvMUdrCmtHR2lYbXJjZllZK2pDUzdyay9hSkRrSnUyeTZseTMzc0FhZWkzTldPclhiam1RU1FIUVl6NVFHd0Q0N2k2Rk4KbkdLSmxBYlM4TUM3YmhldFA4cVRrVFlCYlg0MFNNSWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBckRSZHV2eVphODE4NWo3eGJzQmtmOFZNaW5DaFdHRkFHQVFudHE0djZpM2RsaHFZClRNQk5vQmVsaWg2SXhBTWVHSVpwMkNLU0MvYjQ5WGwxUjYwN0FjenhBQWlzdVlIajhZNkZnRkRrOXpXMTlaaG0KSjZ2VFB4Y2M5cTJBYjU0c094ZTlrL3RKNlZFR2FBN2RZb0J2ekhrdFQ0dGx0cUhtQnJMQklUTGprbVpiVE1KZgpyM1BnUXF4UkNGUDVVZTQ2VENnK0ppb1BUSVpzVmJkaEdEMVNNNUhvV2xPOVVMTG11WWE0cmVPVHVXNkh5VjFTClVqMWNxOTZORkJvc1BaSVJYOXBDUU1wdFVDTFlSUzVaamtpcTFRRTVQdnRWUVdibi9sNHpaYWxUYmZXaW55MlIKYnJNTktHKzZMb1VjYzdaTVB2VTVhQ2JHSnNwaGswR2d3bXBWT1FJREFRQUJBb0lCQUNqMWU2WFNGeHZSRUhnagpXSUdqT1VRNnhXM1lSRWdsT1gxODM0VlFBUTJPUXpwRXNSendVSVpYbVlRMHB3c1lRcnhLbkRwUVhyU0IxYzF0ClNqdjJOQ2JGZkQwcDB3dDhuWjhDNnpZT0I2ZlZHcWFEelNoNmNoQjdpdVFSZUk4VDdDbFNDRUYrYjZJVEo1YncKa2krdnBPZlptckZrMHBpU0FZaHVWQWwxZFRPSXlPa2k0aDNaaXRWK284OTJjdVFla016clJUUktxMmliMmNoaQpzMW1IVFFSQ01uUkMwcnNEa0xNU3p6VTF6Tk5jL3hDTjVySmczNzBoaVBFajl3VUE1blRmTlltaGZUSi8zNnNiCkNScitzZ0Q4US9qcTZxZ0hhZlNYS3dtcUZrdGlVMzAxbUR3Y0UxWDgyckdlWWFpQUVzVlBEaStQZUNIRXhseXUKeEpROE0xRUNnWUVBeEJSZ21COUtUY1J6VFpzSmlwZTRRVVlpRVlzOUtEQ3E1WWgzbHh1UUF2ejZtTGg0ZnBFTwpzRzFBUnU3S2ZOUnZndFdFbGFtOUtaY0dhdWV5OFJRMWpZRytYZElWb3VodDRsMWQveXJMY1IvcHVJZHg1UzZlCno0L005cDBPSlBjc2UxdlhOaHpKYkg0OXdma1dZYkVxZWlpWkswNDFpTXBzUEZnU2dDTHYvT2NDZ1lFQTROUTAKcVdZUFNNMk56THlzdS9CQVJXNW9Kck03dk5DMzhycW1pUExZYlU2bHB5aWljRC8zRGNuaXIrUHZOZUcvVXdqSgpUODE5L3pmRmNXdFNKRGdrcjZlZmtIYi8xR1B4NHdETVJ0aEt3Z1hLR2pmN2EyMDBkRFB6dHhadXBLOUZNcEhTCktWM01OUFprNzEyTmExdHltMmpGd3RkdmNDK05ITjFLMUJ2UnVOOENnWUEwV2lSNE9WS0RkUUk4SkRybDhDQlgKL1R1M1oyL0t2VVBEeVMzMUFIenc3MDZSWEI5LzI0Y0tnQUQ3YjJKTTlnTlg4VjVXLzF6c0w5Q2Mxb1FtYmZqbQpjVSs4aVEwUjAvRVMwVTc1aEJtUmVLM1VnUVZkNVphdFlIMmZFc3ZsL3NDM3B3dk0vTjZpd3dvR01sVlJmQllWClM2V3B0RllDMGRrWU80T2xCcThBM1FLQmdRQ0h3ZnR1a284R0lnRE9zTnNJdk9EQ1RCR2QxTHBzb0FlRERRdkUKUkFkRnNhaTdVQUVPRU1ISVZMQ0tEdk9Cc0tmTHB0R1FXNEFLWFEzZkY3UEk1UkhaOHppWmpoR2FtU01WTklVawovalBlQm9ycjNBUDM4VUFzTHJhcVJtUlhFdktRdjVhTW5mUFJ3enBkZ3pzQ3FYeUJ0UGs5VnNNV2xjLzZydkVoCk5ROGxOd0tCZ0F1b1FxNHUxZTBwUU8vYzJQSitRODFnQmwxYTR6K0JnbXkzOHhndjc5bTMwVnB2YjJ3NmhJTjQKSExsU3VpKzFBeVA0RG1RQ01XOFNINUFiN05ielUzWlNtemRVQjZaL0dQUDV3SjA5T3lBY0U3L3h6bmVBZjJHVwozVU9qWDIrUmttTy9PNFh3dkw0dy9KLzlaMUo1UStvd1FVMEY0dzB5c2pRanRpSHl4d0tFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXMG56MUxISy9FdHdudDJkeUFXT2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURFeE56QXlNemMwTWxvWERUSTRNREV4TnpBeQpNemMwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyRFJkdXZ5WmE4MTg1ajd4YnNCa2Y4Vk1pbkNoV0dGQUdBUW50cTR2NmkzZGxocVkKVE1CTm9CZWxpaDZJeEFNZUdJWnAyQ0tTQy9iNDlYbDFSNjA3QWN6eEFBaXN1WUhqOFk2RmdGRGs5elcxOVpobQpKNnZUUHhjYzlxMkFiNTRzT3hlOWsvdEo2VkVHYUE3ZFlvQnZ6SGt0VDR0bHRxSG1CckxCSVRMamttWmJUTUpmCnIzUGdRcXhSQ0ZQNVVlNDZUQ2crSmlvUFRJWnNWYmRoR0QxU001SG9XbE85VUxMbXVZYTRyZU9UdVc2SHlWMVMKVWoxY3E5Nk5GQm9zUFpJUlg5cENRTXB0VUNMWVJTNVpqa2lxMVFFNVB2dFZRV2JuL2w0elphbFRiZldpbnkyUgpick1OS0crNkxvVWNjN1pNUHZVNWFDYkdKc3BoazBHZ3dtcFZPUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDJINlZiQUhzaFFCVC9nc1dxMW41eVdJd092TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hPdTlaUmZDcmE0RTdHNUpCMXBrd2REYUNOQ2hGbnE1L25kUXZHbm1GYnRIdll1djRVN0hvClJaTXFLNk9qL1lGMzZsRzBuOTUweWhsQ1ZDck5icTJUTDgydHBtdm5teUFMekxRMzliMllkdUZLdGtRV1B3MUUKVi81dUxXdUFLUFQvYkw0ZFZMUVExdCt4YkFZMjJSMUhEdVUwY0xkWFV2V0xyRmVHRnFEcUNlbmhDb2ExSXN1cwozdnNleE9TNnJ2ZWVSMktYSit4TWo3OHVOMzF2Mzhyb1Q5WWJxNUVkZEtjL1FHUXBCQ0J2SjlRK0NMRjYvMUdrCmtHR2lYbXJjZllZK2pDUzdyay9hSkRrSnUyeTZseTMzc0FhZWkzTldPclhiam1RU1FIUVl6NVFHd0Q0N2k2Rk4KbkdLSmxBYlM4TUM3YmhldFA4cVRrVFlCYlg0MFNNSWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRU3VqUVE2S0JnQnhKWGZKOXJZZW1oVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TVRFM01ESXpOelF6V2hjTk1qWXdNVEUzTURJegpOelF6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQWthbnBkNnMwTHRMek1vamFWbkE0cGFBUmdpTmkKak9GMkR4dDQ1bkJLblpKaVY2SjRvancwU3pJUjNBTFh6MFNjVjY2b2J4aVlKRU5mcnNkb2plRFdFYXd4RVpJLwpRU1hXTEV6d3F3Tjl0MjlFY3Z6YjRCejNseFJBWnpTcEJvUTVWQXFlTDdnUndPa2llRHZWa2hjakxPVk9vaEo2ClAwMWpOZkJDLzE3czZDUjNUbFNRZ0Q2SWJ2R082R0crRmRPYkpFYXlPZGxndDl6TDdHRTZvbTMxUFRMRFVLNUoKS2VTaUJoZFFaV1VuYUtORTExelVBQ2szV3NzK0QrWXFnVGVrUE9KTzlYWDJFNG1DNEhveXIyazNhb09qZUhtaQpOV0o0T2FDNUlLTldsR1JMVTNXRUdBZENPaHY2d3BScTBXdTdta09nMTc4Y1Z6cTlPZWpYVmt3M0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQMkg2VmJBSHNoUUJUL2dzV3ExbjV5VwpJd092TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFYWHZ0ODZESUxUZ3JSRWt6azVvM2xpdDRNRHI4Sks5NklOQVZGMWF4Q01BUWRVUzMKN1BrSGQxL3JZWE1NMFpYc29kd3JIcVY2b1RxSSt5MGxEVU5SNlMwN1BQMHExbVhRSnhOU3ZCdGJscVp6ODJYaApYY0dpRk5Rek9jVmVGZm5PbVI0TGRwb2YrSS9mUGtPNXBaR0UyRFZyOGk0VFBmVHhUYmhGVGlJdFBjYUtzYXRZCmFtMUFkbVE0dlpvdVJySUY2ZkFZSkhISUdaZkdBOFFDa0VJS3JHS2Q4MTIvVHFWQ3ZRSmljR3RMY3dLV0lyY3cKcEc1UGFVSFc1Wml0cWUralBQRG51NUN0TytJS1c1dlRMclhjRGRoaFFtVWo2dFpvMExpSEQxYUhiVHBkbHNNTwpSMnA1RFpqUVFuam5NN01LVmJ5N1RoODRSczhJV0hJTmh4RnYyQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0pHcDZYZXJOQzdTOHpLSTJsWndPS1dnRVlJallvemhkZzhiZU9ad1NwMlNZbGVpCmVLSThORXN5RWR3QzE4OUVuRmV1cUc4WW1DUkRYNjdIYUkzZzFoR3NNUkdTUDBFbDFpeE04S3NEZmJkdlJITDgKMitBYzk1Y1VRR2MwcVFhRU9WUUtuaSs0RWNEcEluZzcxWklYSXl6bFRxSVNlajlOWXpYd1F2OWU3T2drZDA1VQprSUEraUc3eGp1aGh2aFhUbXlSR3NqblpZTGZjeSt4aE9xSnQ5VDB5dzFDdVNTbmtvZ1lYVUdWbEoyaWpSTmRjCjFBQXBOMXJMUGcvbUtvRTNwRHppVHZWMTloT0pndUI2TXE5cE4ycURvM2g1b2pWaWVEbWd1U0NqVnBSa1MxTjEKaEJnSFFqb2Irc0tVYXRGcnU1cERvTmUvSEZjNnZUbm8xMVpNTndJREFRQUJBb0lCQUI3QlpQUy93eDB6ZVVlVQpRNTB6ZnZyZElRS0syV0h0QkRsWjBsWnQzM05iVlR6VnFFSkNEd0YvSFFFVE5YVUlTbm41MnhCVnBnVHVqY0FqClp2L0E0Uzd2WmFQMG5Ybnl5cnM1R2hTNkMzV3hyVml1VU1wQk1mOHRKdlBlUjkvVEJaMHVXZi9IdVV0RWx6ZUYKSW5GS3d0MUFWMk5HcVZMUzkyWW9BRGFER01NWFRTM2xvNFVHcWZBTXZKR2h4dlFYaU83a2RBb0dQaVR1Wk82bgpFbThTRFhoUzJqTXkyTFM4Z2REalNWMXYwOXlmbXZESkZUV3NIYnVWcE9saGppbjRYcHRaclZWUHpWazJNc1BSCkVqdDMra21CeEFqQVYxMmJhNW96RTIvKzJRT3hsWUdtVlFUenUvVXdmVEloTk5XZmptTVBZTkxmUXhKdWV5cWUKeWFycnJ5a0NnWUVBeVF1ejB0QndDMGI4aE94S2VnYWJqSS9TZkh4cDIxZFdMZXUzMDlKbVFCN0NlMVU3WktGZQpLeUdzUjBLSU5NeW1RT1JTTU14MHdtakhYUFNpZldxaFRXV0hBeFp2Y1JhNlhQa1BKWjVRN2pMWXBPdjF2MkJRCmk5eklwUERET3JKNktEU1E4MXJwWXEwSzM5OG0vWGk1V1I0cUpoZjRwSTJLYmNkWFFJVnEvbU1DZ1lFQTlUVE0KU3ZMUEM2UVg1QTNDRUY1cUx3UWsxb3k2aWVnYkU2UVFPdnNYcG5xaDRwakpEaFllckFvM2tNbmQxNG1DNE1QMwpFbm9mRjZzelgzQzRQSjFnUjY1QmI1NjZ1K1BWejhUOE5DamxjZHZZb3o5S2tjNHdicXUyc25zWWZJTVIzWUU2CmgvTk93aHJ1ODBIZjJpODBYc0wyUlBSY2pKeXo5aGlYbHVPQ0NSMENnWUVBcXVpdzRSbGk5cU5ORGk3VmpYREsKa1M2K3NDY1AwbkFuaWZnbUdRTjIrekZyQVcvT2d0aVBkamswL0lzNXdURHNjS1BvbnlWZ2FOaXNDb0RKRmJjdApFdCtwYTkySnRXaXQyMVc3STY2M2ZCZHJocUExRkpEclNFclRveXd0dTF0NGIyOW9mZ2lkK00zRVBkYTFqYXN3Clhlcy94NHgvU2x3cy92QUVZNHhJRGFNQ2dZQkRCWGhsYi9LSmt3TjRzUTMvSFY5V2xJSmhKandDWDYrdThhUUMKQ3dtTzFtd1RISUd2MlBudk9pZXY2bzA1VVh1MVpick5rUldZaVpIVUgySXNKelBldzlGYzZmek9TRnJ6bkRyMwpJc3A4RVlRb01xOTJKTzUyQVhkQlY0WDgybkp5b2RUV3Zma2o4dXFuRUxWWDFKa3k0WVVnbWM0R0hQclBaQzlpCjdiSm9QUUtCZ0FNdHJIQ0k1azZ6QkltZVM1S2ozSGdXT293NHQ1dDRtOHNKWEI1U2ROa20wcVJ3dkVUUmI2MngKWnptYmRnYnhOMVhtZGlPc04rakFidU45eXQ1VXZKTHVLNTNFdkFNOHg0aThOajF0UnVRZktrMnVJWXIxRUxqaApMNmZuWnN6cVBrUGhuM2ZSMW5HUXJqc09sVU4vcm91WU5ibG82cUE5QUlWYW1meWJ1a2VICi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/hubble/tls-helm/server-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXMG56MUxISy9FdHdudDJkeUFXT2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURFeE56QXlNemMwTWxvWERUSTRNREV4TnpBeQpNemMwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyRFJkdXZ5WmE4MTg1ajd4YnNCa2Y4Vk1pbkNoV0dGQUdBUW50cTR2NmkzZGxocVkKVE1CTm9CZWxpaDZJeEFNZUdJWnAyQ0tTQy9iNDlYbDFSNjA3QWN6eEFBaXN1WUhqOFk2RmdGRGs5elcxOVpobQpKNnZUUHhjYzlxMkFiNTRzT3hlOWsvdEo2VkVHYUE3ZFlvQnZ6SGt0VDR0bHRxSG1CckxCSVRMamttWmJUTUpmCnIzUGdRcXhSQ0ZQNVVlNDZUQ2crSmlvUFRJWnNWYmRoR0QxU001SG9XbE85VUxMbXVZYTRyZU9UdVc2SHlWMVMKVWoxY3E5Nk5GQm9zUFpJUlg5cENRTXB0VUNMWVJTNVpqa2lxMVFFNVB2dFZRV2JuL2w0elphbFRiZldpbnkyUgpick1OS0crNkxvVWNjN1pNUHZVNWFDYkdKc3BoazBHZ3dtcFZPUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDJINlZiQUhzaFFCVC9nc1dxMW41eVdJd092TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hPdTlaUmZDcmE0RTdHNUpCMXBrd2REYUNOQ2hGbnE1L25kUXZHbm1GYnRIdll1djRVN0hvClJaTXFLNk9qL1lGMzZsRzBuOTUweWhsQ1ZDck5icTJUTDgydHBtdm5teUFMekxRMzliMllkdUZLdGtRV1B3MUUKVi81dUxXdUFLUFQvYkw0ZFZMUVExdCt4YkFZMjJSMUhEdVUwY0xkWFV2V0xyRmVHRnFEcUNlbmhDb2ExSXN1cwozdnNleE9TNnJ2ZWVSMktYSit4TWo3OHVOMzF2Mzhyb1Q5WWJxNUVkZEtjL1FHUXBCQ0J2SjlRK0NMRjYvMUdrCmtHR2lYbXJjZllZK2pDUzdyay9hSkRrSnUyeTZseTMzc0FhZWkzTldPclhiam1RU1FIUVl6NVFHd0Q0N2k2Rk4KbkdLSmxBYlM4TUM3YmhldFA4cVRrVFlCYlg0MFNNSWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRR2w0KzZsUEhpYW9nRWZRd1ArTkx0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TVRFM01ESXpOelF6V2hjTk1qWXdNVEUzTURJegpOelF6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcDFCZ3d0Y3dhaGhZT1EzUnZ1aGkKRVRiczNnUHMvRUs3RmxJNTFjQk1oWDZ4Q0VvRzY4NzIvcDVRREx1VVBpUnI1MUZhbDZ5UWxVckFQdWYzY1QyZwo5WUpFTmFGVHdLRkoyaytYSW9WRG9rZ2VqN3kvQVpJdldTbUNsU2ZocXhsOXZOYjlHNmx6dWV1NURaNmNSK1BECkZaNS94eG1MbWRyRzdwNTdSMDA0TEl6eGNlY3RrOGh4a3FXS0RsUHZWMHNXUWxWTi9WbUN3S1pjTDJpVlduM3gKWTNvdHhTSWFYeUFhZ3Vub1JJbUMyWmRiSzJEdkQ5WVRhN3VvdDVEVXIvalpMQk1nUHZFMHN4bms3ZzlRbzZGRQp3eWwvR1paZllWMDdDNnNzZ1luTVZETUdKOWxkVHlNc0FvTjlJTUxBbzlVNjFnZG5LUG56c0xGb005ZlA1VVlHCjJ3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUOWgrbFd3QjdJVUFVLwo0TEZxdForY2xpTURyekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBK1hEbW8yR09kcjBqWU1wWEpodjFhc21ibGtkajMKc1dpR0FSM1duQ2k0T0tsWWt2eThkcnNKeUxmYU5LOFR0M0swWGNWRUppRE1XOGRuM3hLQ3g5eG1ISDMzbU1iZQpWQTBBOG96YnNwMzlJNzNnSWROdlBCdkJnRGlrMUpwa0M1RzFMQXFLanRrVFV5OTlXd3FvN0E3ZEdHd3psbUl5Cnl5Z0J0QXNFUjFuRkg4NG9GMWhpSGVCeVJHaVhMemIreVVhZ1ZZNXoxdXByLzl3bmpHOEl0MXNUbXRVenQvSFcKbkVnMktYQllUbDVLOVpIV2tGTURXU2E1bnRKczRXRFVRRDdFMjd1RlNjdGJSZ3VnM1EvNmZHV29LTi8vY1dqNwpKWjE3Sjh5aFpjb1VRRHVBVW92T2FUaFNxamtxNzJCMWFxdDFKWUo5VkNueWtMZU9hTHVJTWU5QwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcDFCZ3d0Y3dhaGhZT1EzUnZ1aGlFVGJzM2dQcy9FSzdGbEk1MWNCTWhYNnhDRW9HCjY4NzIvcDVRREx1VVBpUnI1MUZhbDZ5UWxVckFQdWYzY1QyZzlZSkVOYUZUd0tGSjJrK1hJb1ZEb2tnZWo3eS8KQVpJdldTbUNsU2ZocXhsOXZOYjlHNmx6dWV1NURaNmNSK1BERlo1L3h4bUxtZHJHN3A1N1IwMDRMSXp4Y2VjdAprOGh4a3FXS0RsUHZWMHNXUWxWTi9WbUN3S1pjTDJpVlduM3hZM290eFNJYVh5QWFndW5vUkltQzJaZGJLMkR2CkQ5WVRhN3VvdDVEVXIvalpMQk1nUHZFMHN4bms3ZzlRbzZGRXd5bC9HWlpmWVYwN0M2c3NnWW5NVkRNR0o5bGQKVHlNc0FvTjlJTUxBbzlVNjFnZG5LUG56c0xGb005ZlA1VVlHMndJREFRQUJBb0lCQUVZNExMUDVQajk0d2lZSAp6N3lRcVAvU2ptekxOdjNVUDlLcFpjNTQ2MlNuZkVNZlZuSkhKVkJOUHdsby9GbHNUY0VDV3NRSFQ1TG9rWENWClNEdEZnelVtbTl2cVBrMDlJOUswenBoVlY4SlhCRVNORVpqbU1tcjRTZTZ4a3p1TThrRjc5VFJUMU5iMXdHK2YKM3JVcE9PbnM0SEcrSGVIUGVPZ1NxV2lPVndJUzR4a1NZU3oraStnWDFWQ01XNE84OFY5Ulp3WDZRZGlUYWRNSwpqMFJUQWNDQ2RMbTNZdTRNVUZsclpxZ0t2V3hwcEY1OHEwZ2U4UDBxVmY1N3VMRElQMGtwU09wSjBmeFJzSHpyCmhEWW9HcE8yRVNJQlVXV09GY3JSNUVuMlpIaE5jQTN3dEN4V1R6U1g4VGsyUVJ3ay9zRklCeUp3NHFObzVTdCsKNjA4cU43a0NnWUVBeEdRUWcwb3hnYjRFR1phNXR4bHJGY2syRUpBY1p3cmZQemh0dGt6anIweXgvNGNzRHF4Zwp5NzNKWmwzaXJRRFFVelRnRXdwK2hFT2FpM3FuTFRxaWdQNmV2M2VjVTczK25wb1B6TnhNdzQxdVNzcUJRRzhiCjRVaHk1akJzQndjMitaK0dsdDZtYW9Ia1RXLzg4WFkrZFU5enZCRE0rUnorWS9PUTBpOUdUK1VDZ1lFQTJoajcKL3E3MzV2a3FJaCtPdHhVQWdKUG15Wkx3dTc0M21VQmtwYU1LSkVYSVNrWTVuSVJ1Y1BvcHNYQmx3MUxhU2tiawpHTnNoZ3BjODhSejlzUHdFRTJIOVU0NktUMW5vb0NxeEc2YUhJN00rcnAza3N6YmZ6azBvamEvMkxxd3cyTFNWCkQ3ZFhEa3gyTjRIZVJvT0tzMmt5QlVLWlFFU2IvbmV4VnRaNkQ3OENnWUVBbEY5cEhsZXFhWFFPa3VxTjZxaFkKZ0FBaFNZZ20vUzU0bGNIakdZeWpvK2dVdnBINEZpbmpnMm9pUTZXQXdPWFJmbHQvUXNOMTdDVkxHRCtWR0JXcAplajFqNEJIVTJHdTlkME83MWpGR0NhUExoTlBUck1PRTA4SXhsSGxXMUVSK0l6K0RwbTRXV25kQjdjTkMzWVpSCkQ3MzBHVXkwSHl6cGdNZ2VUTDJNcUlVQ2dZQVVCdXRNN2NBeDQzdHMrcnplTHYyRzBRNEdRSW4razI4RGtaZ3MKWlpaTzBtR2NBR3JWNW90RnNKTVhpaHl1SFBPU2tvUHJqR085WENucWNpRVJtWEsrWE9jb1B4U1FTTTlGdGVYaApoaDh1dGd6eGQrcENVcTJtZ2d0UlIzRXh3L29RVERUTDVxZ0YxaHVjNlQ0Qjk1NUs3MFA2bTZ6NjY5SHZRZ3AwCjBPa1FmUUtCZ1FDRlVXRmRSUGVScGhYMytVVytFZEd3TTFBeXZyQmpsVm5nNzVmdmdxZElwekhpUERmeEhvNTAKK0RwR0pYWFRIV3JtL0xwRldwK3A2UGhTRUt3SjM5dEsxQ1E0SWl3V0prdXVWZVBqTFFORW0vYWVXNjdwbmEzTwpzZTVEUXQxaXJkQTZJVG5PWithZkpqQStqejJEWCtDbWFhVnFXVkRQTUN0UzlNaW5hWld4Tnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        ---
        # Source: cilium/templates/cilium-configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        data:
        
          # Identity allocation mode selects how identities are shared between cilium
          # nodes by setting how they are stored. The options are "crd" or "kvstore".
          # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
          #   These can be queried with:
          #     kubectl get ciliumid
          # - "kvstore" stores identities in an etcd kvstore, that is
          #   configured below. Cilium versions before 1.6 supported only the kvstore
          #   backend. Upgrades from these older cilium versions should continue using
          #   the kvstore by commenting out the identity-allocation-mode below, or
          #   setting it to "kvstore".
          identity-allocation-mode: crd
          identity-heartbeat-timeout: "30m0s"
          identity-gc-interval: "15m0s"
          cilium-endpoint-gc-interval: "5m0s"
          nodes-gc-interval: "5m0s"
        
          # If you want to run cilium in debug mode change this value to true
          debug: "false"
          debug-verbose: ""
          # The agent can be put into the following three policy enforcement modes
          # default, always and never.
          # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
          enable-policy: "default"
          policy-cidr-match-mode: ""
          # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
          # field is not set.
          proxy-prometheus-port: "9964"
          # If you want metrics enabled in cilium-operator, set the port for
          # which the Cilium Operator will have their metrics exposed.
          # NOTE that this will open the port on the nodes where Cilium operator pod
          # is scheduled.
          operator-prometheus-serve-addr: ":9963"
          enable-metrics: "true"
        
          # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
          # address.
          enable-ipv4: "true"
        
          # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
          # address.
          enable-ipv6: "false"
          # Users who wish to specify their own custom CNI configuration file must set
          # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
          custom-cni-conf: "false"
          enable-bpf-clock-probe: "false"
          # If you want cilium monitor to aggregate tracing for packets, set this level
          # to "low", "medium", or "maximum". The higher the level, the less packets
          # that will be seen in monitor output.
          monitor-aggregation: medium
        
          # The monitor aggregation interval governs the typical time between monitor
          # notification events for each allowed connection.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-interval: "5s"
        
          # The monitor aggregation flags determine which TCP flags which, upon the
          # first observation, cause monitor notifications to be generated.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-flags: all
          # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
          # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
          bpf-map-dynamic-size-ratio: "0.0025"
          # bpf-policy-map-max specifies the maximum number of entries in endpoint
          # policy map (per endpoint)
          bpf-policy-map-max: "16384"
          # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
          # backend and affinity maps.
          bpf-lb-map-max: "65536"
          bpf-lb-external-clusterip: "false"
        
          bpf-events-drop-enabled: "true"
          bpf-events-policy-verdict-enabled: "true"
          bpf-events-trace-enabled: "true"
        
          # Pre-allocation of map entries allows per-packet latency to be reduced, at
          # the expense of up-front memory allocation for the entries in the maps. The
          # default value below will minimize memory usage in the default installation;
          # users who are sensitive to latency may consider setting this to "true".
          #
          # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
          # this option and behave as though it is set to "true".
          #
          # If this value is modified, then during the next Cilium startup the restore
          # of existing endpoints and tracking of ongoing connections may be disrupted.
          # As a result, reply packets may be dropped and the load-balancing decisions
          # for established connections may change.
          #
          # If this option is set to "false" during an upgrade from 1.3 or earlier to
          # 1.4 or later, then it may cause one-time disruptions during the upgrade.
          preallocate-bpf-maps: "false"
        
          # Name of the cluster. Only relevant when building a mesh of clusters.
          cluster-name: default
          # Unique ID of the cluster. Must be unique across all conneted clusters and
          # in the range of 1 and 255. Only relevant when building a mesh of clusters.
          cluster-id: "0"
        
          # Encapsulation mode for communication between nodes
          # Possible values:
          #   - disabled
          #   - vxlan (default)
          #   - geneve
          # Default case
          routing-mode: "tunnel"
          tunnel-protocol: "vxlan"
          service-no-backend-response: "reject"
        
        
          # Enables L7 proxy for L7 policy enforcement and visibility
          enable-l7-proxy: "false"
        
          enable-ipv4-masquerade: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-tcx: "true"
          datapath-mode: "veth"
          enable-masquerade-to-route-source: "false"
        
          enable-xt-socket-fallback: "true"
          install-no-conntrack-iptables-rules: "false"
        
          auto-direct-node-routes: "false"
          direct-routing-skip-unreachable: "false"
          enable-local-redirect-policy: "false"
          enable-runtime-device-detection: "true"
        
          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          bpf-lb-sock: "false"
          bpf-lb-sock-terminate-pod-connections: "false"
          nodeport-addresses: ""
          enable-health-check-nodeport: "true"
          enable-health-check-loadbalancer-ip: "false"
          node-port-bind-protection: "true"
          enable-auto-protect-node-port-range: "true"
          bpf-lb-acceleration: "disabled"
          enable-svc-source-range-check: "true"
          enable-l2-neigh-discovery: "true"
          arping-refresh-period: "30s"
          k8s-require-ipv4-pod-cidr: "false"
          k8s-require-ipv6-pod-cidr: "false"
          enable-k8s-networkpolicy: "true"
          # Tell the agent to generate and write a CNI configuration file
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
          cni-exclusive: "true"
          cni-log-file: "/var/run/cilium/cilium-cni.log"
          enable-endpoint-health-checking: "true"
          enable-health-checking: "true"
          enable-well-known-identities: "false"
          enable-node-selector-labels: "false"
          synchronize-k8s-nodes: "true"
          operator-api-serve-addr: "127.0.0.1:9234"
          # Enable Hubble gRPC service.
          enable-hubble: "true"
          # UNIX domain socket for Hubble server to listen to.
          hubble-socket-path: "/var/run/cilium/hubble.sock"
          # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
          # field is not set.
          hubble-metrics-server: ":9965"
          hubble-metrics-server-enable-tls: "false"
          # A space separated list of metrics to enable. See [0] for available metrics.
          #
          # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
          hubble-metrics:
            dns:query
            drop
            tcp
            flow
            port-distribution
            icmp
            http
          enable-hubble-open-metrics: "false"
          hubble-export-file-max-size-mb: "10"
          hubble-export-file-max-backups: "5"
          # An additional address for Hubble server to listen to (e.g. ":4244").
          hubble-listen-address: ":4244"
          hubble-disable-tls: "false"
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          ipam: "kubernetes"
          ipam-cilium-node-update-rate: "15s"
          egress-gateway-reconciliation-trigger-interval: "1s"
          enable-vtep: "false"
          vtep-endpoint: ""
          vtep-cidr: ""
          vtep-mask: ""
          vtep-mac: ""
          # Enable L2 announcements
          enable-l2-announcements: "true"
          bpf-root: "/sys/fs/bpf"
          cgroup-root: "/sys/fs/cgroup"
          enable-k8s-terminating-endpoint: "true"
          enable-sctp: "false"
        
          k8s-client-qps: "10"
          k8s-client-burst: "20"
          remove-cilium-node-taints: "true"
          set-cilium-node-taints: "true"
          set-cilium-is-up-condition: "true"
          unmanaged-pod-watcher-interval: "15"
          # default DNS proxy to transparent mode in non-chaining modes
          dnsproxy-enable-transparent-mode: "true"
          dnsproxy-socket-linger-timeout: "10"
          tofqdns-dns-reject-response-code: "refused"
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: "0s"
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: "100ms"
          agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
        
          mesh-auth-enabled: "true"
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          mesh-auth-gc-interval: "5m0s"
        
          proxy-xff-num-trusted-hops-ingress: "0"
          proxy-xff-num-trusted-hops-egress: "0"
          proxy-connect-timeout: "2"
          proxy-initial-fetch-timeout: "30"
          proxy-max-requests-per-connection: "0"
          proxy-max-connection-duration-seconds: "0"
          proxy-idle-timeout-seconds: "60"
        
          external-envoy-proxy: "false"
          envoy-base-id: "0"
        
          envoy-keep-cap-netbindservice: "false"
          max-connected-clusters: "255"
          clustermesh-enable-endpoint-sync: "false"
          clustermesh-enable-mcs-api: "false"
        
          nat-map-stats-entries: "32"
          nat-map-stats-interval: "30s"
        
        # Extra config allows adding arbitrary properties to the cilium config.
        # By putting it at the end of the ConfigMap, it's also possible to override existing properties.
        ---
        # Source: cilium/templates/hubble-relay/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        data:
          config.yaml: |
            cluster-name: default
            peer-service: "hubble-peer.kube-system.svc.cluster.local.:443"
            listen-address: :4245
            gops: true
            gops-port: "9893"
            dial-timeout: 
            retry-timeout: 
            sort-buffer-len-max: 
            sort-buffer-drain-timeout: 
            tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
            tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
            tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
            disable-server-tls: true
        ---
        # Source: cilium/templates/hubble-ui/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        data:
          nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
