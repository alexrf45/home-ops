---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    pod-security.kubernetes.io/enforce = "privileged
    app = "kube-prometheus-stack"

---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: monitoring
  namespace: monitoring
spec:
  interval: 1m0s
  url: https://prometheus-community.github.io/helm-charts

---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: monitoring
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: monitoring
        namespace: monitoring
      version: 68.2.1
  interval: 1m0s
  releaseName: kube-prometheus-stack
  targetNamespace: monitoring
  values:
    alertmanager:
      apiVersion: v2
      enabled: true
      ingress:
        enabled: false
        portName: http-web
        replicas: 1
        retention: 240h
        routePrefix: /
        storage:
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 10Gi
              storageClassName: longhorn
    crds:
      appNamespacesTarget: .*
      enabled: true
      keepFiringFor: ""
    grafana:
      admin:
        existingSecret: "grafana-secret"
      adminPassword: prom-operator
      defaultDashboardsEditable: true
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: America/New_York
      enabled: true
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-staging
          nginx.ingress.kubernetes.io/proxy-body-size: 20000m
        enabled: true
        hosts:
        - internal.grafana.fr3d.dev
        ingressClassName: nginx-internal
        path: /
        tls:
        - hosts:
          - internal.grafana.fr3d.dev
          secretName: grafana-general-tls
      namespaceOverride: monitoring
      persistence:
        accessModes:
        - ReadWriteOnce
        enabled: true
        finalizers:
        - kubernetes.io/pvc-protection
        size: 10Gi
        storageClassName: longhorn
        type: sts
      rbac: null
      serviceMonitor:
        enabled: true
        path: /metrics
    namespaceOverride: monitoring
    prometheus:
      enabled: true
      prometheusSpec:
        logFormat: logfmt
        logLevel: info
        persistentVolumeClaimRetentionPolicy:
          whenDeleted: Delete
          whenScaled: Retain
        podMonitorNamespaceSelector: {}
        podMonitorSelector: {}
        podMonitorSelectorNilUsesHelmValues: true
        probeNamespaceSelector: {}
        probeSelector: {}
        probeSelectorNilUsesHelmValues: true
        retention: 5d
        retentionSize: 2GB
        routePrefix: /
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: true
        scrapeConfigNamespaceSelector: {}
        scrapeConfigSelector: {}
        scrapeConfigSelectorNilUsesHelmValues: true
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 10Gi
              storageClassName: longhorn
        walCompression: true
      serviceMonitor:
        selfMonitor: true
    prometheusOperator:
      enabled: true
      tls:
        certManager:
          admissionCert:
            duration: ""
          enabled: true
          issuerRef:
            kind: ClusterIssuer
            name: issuer
          rootCert:
            duration: ""
        enabled: true
        internalPort: 10250
        tlsMinVersion: VersionTLS13
